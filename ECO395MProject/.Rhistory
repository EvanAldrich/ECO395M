vgchart = read.csv("vgchartz.csv")
library(dplyr)
vgchart = read.csv("vgchartz.csv")
vgchartfilt = vgchart %>% filter(!is.na(total_sales) & total_sales != "")
vgchartfilt
library(dplyr)
vgchart = read.csv("vgchartz.csv")
vgchartfilt = vgchart %>% filter(!is.na(total_sales) & total_sales != "")
vgchartfilt
write.csv(vgchartfilt, "filt.csv")
library(dplyr)
vgchart = read.csv("vgchartz.csv")
vgchartfilt = vgchart %>% filter(!is.na(total_sales) & total_sales != "") %>% filter(!is.na(critic_score) & critic_score != "")
vgchartfilt
write.csv(vgchartfilt, "filt.csv")
library(dplyr)
vgchart = read.csv("vgchartz.csv")
vgchartfilt = vgchart %>% filter(!is.na(total_sales) & total_sales != "") %>% filter(!is.na(critic_score) & critic_score != "")
vgchartfilt
write.csv(vgchartfilt, "filt.csv")
data1 = read.csv("video_games.csv")
data2 = read.csv("2013_Video_Games_Dataset")
merged_data = merge(data1, data2, by = "Title")
write.csv(merged_data, "big_vg.csv")
data1 = read.csv("video_games.csv")
data2 = read.csv("2013_Video_Games_Dataset.csv")
merged_data = merge(data1, data2, by = "Title")
write.csv(merged_data, "big_vg.csv")
data1 = read.csv("video_games.csv")
data2 = read.csv("2013_Video_Games_Dataset.csv")
merged_data = merge(data1, data2, by = c("Title", "Console"))
write.csv(merged_data, "big_vg.csv")
capmetro = read.csv('capmetro.csv')
summary(capmetro)
capmetro = read.csv('capmetro.csv')
summary(capmetro)
capmetro = read.csv('capmetro.csv')
summary(capmetro)
library(tidyverse)
library(lubridate)
library(randomForest)
library(gbm)
library(pdp)
library(modelr)
library(rsample)
capmetro = read.csv('capmetro.csv')
summary(capmetro)
capmetro = read.csv("capmetro.csv")
summary(capmetro)
capmetro = read.csv("capmetro.csv")
summary(capmetro)
capmetro$zone = factor(capmetro$zone)
capmetro$day = factor(capmetro$day, levels=c('Monday','Tuesday', "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
capmetro = mutate(capmetro, hour = hour(timestamp),
min_of_day = 60*hour(timestamp) + minute(timestamp))
capmetro = mutate(capmetro, precipYes = ifelse(precipIntensity>0, 1, 0),
inSemester = ifelse(date(timestamp) %within%
interval(ymd("2018-08-29"), ymd("2018-12-07")), 1, 0))
ggplot(data=capmetro) +
geom_boxplot(mapping=aes(x=factor(hour), y=boarding))
hour_summ = capmetro %>%
group_by(hour, zone, day, inSemester) %>%
summarize(boarding_mean = mean(boarding))
ggplot(hour_summ) +
geom_col(aes(x=hour, y=boarding_mean)) +
facet_grid(day~zone)
ggplot(filter(hour_summ, zone==362)) +
geom_col(aes(x=hour, y=boarding_mean)) +
facet_grid(day~inSemester)
capmetro362 = filter(capmetro, zone==362)
capmetro362_split = initial_split(capmetro362)
capmetro362 = filter(capmetro, zone==362)
capmetro362_split = initial_split(capmetro362)
# training and testing sets
n = nrow(capmetro362)
capmetro362_train = training(capmetro362_split)
capmetro362_test = testing(capmetro362_split)
forest1 = randomForest(boarding ~ day + temperature + min_of_day + precipYes + inSemester,
data=capmetro362_train)
yhat_test = predict(forest1, capmetro362_test)
plot(yhat_test, capmetro362_test$boarding)
# RMSE
rmse(forest1, capmetro362_test)
# performance as a function of iteration number
plot(forest1)
# a variable importance plot: how much SSE decreases from including each var
varImpPlot(forest1)
boost1 = gbm(boarding ~ day + temperature + min_of_day + precipYes + inSemester,
data = capmetro362_train,
interaction.depth=4, n.trees=500, shrinkage=.05)
# Look at error curve -- stops decreasing much after ~300
gbm.perf(boost1)
yhat_test_gbm = predict(boost1, capmetro362_test, n.trees=350)
# RMSE
rmse(boost1, capmetro362_test)
# What if we assume a Poisson error model?
boost2 = gbm(boarding ~ day + temperature + min_of_day + precipYes + inSemester,
data = capmetro362_train, distribution='poisson',
interaction.depth=4, n.trees=350, shrinkage=.05)
n = nrow(capmetro362)
n
library(dplyr)
vg_2020 = read.csv("2020_vg.csv")
vg_2020 = na.omit(vg_2020)
vg_2020 = read.csv("vg_2020.csv")
vg_2020 = na.omit(vg_2020)
vg_2020 = read.csv("vg_2020.csv")
vg_2020 = na.omit(vg_2020)
vg_2020
view(vg_2020)
library(tidyverse)
library(ggplot2)
library(modelr)
library(mosaic)
library(foreach)
library(dplyr)
library(rpart)
library(rpart.plot)
library(rsample)
library(randomForest)
library(lubridate)
library(modelr)
library(gbm)
library(pdp)
library(ggmap)
library(osmdata)
library(tidyr)
library(caret)
view(vg_2020)
vg_2020 = read.csv("vg_2020.csv")
vg_2020 = na.omit(vg_2020)
view(vg_2020)
vg_2020 = read.csv("vg_2020.csv")
vg_2020 = na.omit(vg_2020)
view(vg_2020)
data1 = read.csv("video_games.csv")
data2 = read.csv("2013_Video_Games_Dataset.csv")
merged_data = merge(data1, data2, by = c("Title", "Console"))
merged_data = na.omit(merged_data)
view(merged_data)
merged_data$console = factor(merged_data$console)
merged_data$Max_Players = factor(merged_data$Max_Players)
merged_data$Genres = factor(merged_data$Genres)
merged_data$Title = factor(merged_data$Title)
write.csv(vgchartfilt, "merged_data.csv")
write.csv(merged_data, "merged_data.csv")
merged_data = na.omit(merged_data)
merged_data$console = factor(merged_data$console)
merged_data$Max_Players = factor(merged_data$Max_Players)
merged_data$Genres = factor(merged_data$Genres)
merged_data$Title = factor(merged_data$Title)
write.csv(merged_data, "merged_data.csv")
data1 = read.csv("video_games.csv")
data2 = read.csv("2013_Video_Games_Dataset.csv")
data1 = na.omit(data1)
data2 = na.omit(data2)
merged_data = merge(data1, data2, by = c("Title", "Console"))
merged_data = na.omit(merged_data)
merged_data$console = factor(merged_data$console)
merged_data$Max_Players = factor(merged_data$Max_Players)
merged_data$Genres = factor(merged_data$Genres)
merged_data$Title = factor(merged_data$Title)
write.csv(merged_data, "merged_data.csv")
merged_data = filter(merged_data, Length.Completionists.Rushed > 0)
write.csv(merged_data, "merged_data.csv")
write.csv(merged_data, "merged_data.csv")
merged_data = filter(merged_data, Length.Main...Extras.Polled > 0)
write.csv(merged_data, "merged_data.csv")
write.csv(merged_data, "merged_data.csv")
vg_2020 = read.csv("vg_2020.csv")
vg_2020 = na.omit(vg_2020)
view(vg_2020)
write.csv(merged_data, "vg2_2020.csv")
write.csv(vg_2020, "vg2_2020.csv")
ggplot(vgs) + geom_point(aes(x=Length.All.PlayStyles.Average, y=US_Sales))
vgs = merged_data
ggplot(vgs) + geom_point(aes(x=Length.All.PlayStyles.Average, y=US_Sales))
ggplot(vgs) + geom_point(aes(x=Length.All.PlayStyles.Average, y=US_Sales, color = Console))
ggplot(vgs) + geom_point(aes(x=Used_Price, y=US_Sales, color = Console))
ggplot(vgs) + geom_point(aes(x=Used_Price, y=Review_Score, color = Console))
ggplot(vgs) + geom_point(aes(x=Review_Score, y=US_Sales, color = Console))
vgs = merged_data %>% filter(US_Sales < 8)
ggplot(vgs) + geom_point(aes(x=Review_Score, y=US_Sales, color = Console))
ggplot(vgs) + geom_point(aes(x=Length.All.PlayStyles.Average, y=US_Sales, color = Console))
ggplot(vgs) + geom_point(aes(x=Used_Price, y=US_Sales, color = Console))
ggplot(vgs) + geom_point(aes(x=Length.All.PlayStyles.Average, y=US_Sales, color = Release.Rating))
ggplot(vgs) + geom_point(aes(x=Used_Price, y=US_Sales, color = Release.Rating))
ggplot(vgs) + geom_point(aes(x=Review_Score, y=US_Sales, color = Release.Rating))
vgs = merged_data
ggplot(vgs) + geom_point(aes(x=Length.All.PlayStyles.Average, y=US_Sales, color = Release.Rating))
ggplot(vgs) + geom_point(aes(x=Used_Price, y=US_Sales, color = Release.Rating))
ggplot(vgs) + geom_point(aes(x=Review_Score, y=US_Sales, color = Release.Rating))
view(vg_2020)
vg_2020 = read.csv("vg_2020.csv")
view(vg_2020)
ggplot(vg_2020) + geom_point(aes(x=criric_score, y=na_sales, color = genre))
vg_2020 = na.omit(vg_2020)
ggplot(vg_2020) + geom_point(aes(x=criric_score, y=na_sales, color = genre))
vg_2020 = read.csv("vg_2020.csv")
ggplot(vg_2020) + geom_point(aes(x=critic_score, y=na_sales, color = genre))
ggplot(vg_2020) + geom_point(aes(x=jp_sales, y=na_sales, color = genre))
ggplot(vg_2020) + geom_point(aes(x=jp_sales, y=na_sales, color = console))
vgchart = read.csv("vgchartz.csv")
vgchart = read.csv("vgchartz.csv")
vgchart = na.omit(vgchart)
view(vgchart)
vgchart = read.csv("vgchartz.csv")
vgchart = na.omit(vgchart)
view(vgchart)
ggplot(vgchart) + geom_point(aes(x=release_date, y=na_sales, color = genre))
ggplot(vgchart) + geom_point(aes(x=critic_score, y=na_sales, color = genre))
ggplot(vgchart) + geom_point(aes(x=jp_sales, y=na_sales, color = genre))
ggplot(vgchart) + geom_point(aes(x=jp_sales, y=na_sales, color = console))
write.csv(vgchart, "chartvg.csv")
vg_2016 = read.csv("vgsales2016.csv")
vg_2016 = na.omit(vg_2016)
view(vg_2016)
write.csv(vg_2016, "vg2_2016.csv")
vg_2016 = read.csv("vg2_2016.csv")
ggplot(vg_2016) + geom_point(aes(x=jp_sales, y=na_sales, color = console))
ggplot(vg_2016) + geom_point(aes(x=User_Score, y=NA_Sales, color = console))
ggplot(vg_2016) + geom_point(aes(x=Critic_Score, y=NA_Sales, color = console))
ggplot(vg_2016) + geom_point(aes(x=User_Score, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=Critic_Score, y=NA_Sales, color = Genre))
vg_2016 = vg_2016 %>% filter(NA_Sales < 8)
ggplot(vg_2016) + geom_point(aes(x=User_Score, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=Critic_Score, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=EU_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=EU_Sales, color = Genre))
vg_2016 = read.csv("vg2_2016.csv")
ggplot(vg_2016) + geom_point(aes(x=EU_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=EU_Sales, color = Genre))
vg_2016 = vg_2016 %>% filter(NA_Sales < 25)
ggplot(vg_2016) + geom_point(aes(x=EU_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=EU_Sales, color = Genre))
vg_2016$Name = factor(vg_2016$Name)
vg_2016$Name = factor(vg_2016$Name)
vg_2016$Platform = factor(vg_2016$Platform)
vg_2016$Year = factor(vg_2016$Year)
vg_2016$Genre = factor(vg_2016$Genre)
vg_2016$Publisher = factor(vg_2016$Publisher)
vg_2016$Developer = factor(vg_2016$Developer)
vg_2016$Rating = factor(vg_2016$Rating)
view(vg_2016)
vg2016_split = initial_split(vg_2016, prop=0.8)
vg2016_train = training(vg2016_split)
vg2016_test = testing(vg2016_split)
tree_cart_big=rpart(NA_Sales ~ . , data=vg2016_train, control=rpart.control(cp=0.0015, minsplit=30))
rpart.plot(tree_cart_big, digits=-5, type=4, extra=1)
a= rmse(tree_cart_big, dengue_test)
library(tidyverse)
library(ggplot2)
library(modelr)
library(mosaic)
library(foreach)
library(dplyr)
library(rpart)
library(rpart.plot)
library(rsample)
library(randomForest)
library(lubridate)
library(modelr)
library(gbm)
library(pdp)
library(ggmap)
library(osmdata)
library(tidyr)
library(caret)
tree_cart_big=rpart(NA_Sales ~ . -Name , data=vg2016_train, control=rpart.control(cp=0.0015, minsplit=30))
tree_cart_big=rpart(NA_Sales ~ . - Name , data=vg2016_train, control=rpart.control(cp=0.0015, minsplit=30))
tree_cart_big=rpart(NA_Sales ~ . - Name , data=vg2016_train, control=rpart.control(cp=0.0015, minsplit=30))
vg_2016 = read.csv("vg2_2016.csv")
vg_2016 = vg_2016 %>% filter(NA_Sales < 25)
#vg_2016$Name = factor(vg_2016$Name)
vg_2016$Platform = factor(vg_2016$Platform)
vg_2016$Year = factor(vg_2016$Year)
vg_2016$Genre = factor(vg_2016$Genre)
vg_2016$Publisher = factor(vg_2016$Publisher)
vg_2016$Developer = factor(vg_2016$Developer)
vg_2016$Rating = factor(vg_2016$Rating)
vg2016_split = initial_split(vg_2016, prop=0.8)
vg2016_train = training(vg2016_split)
vg2016_test = testing(vg2016_split)
tree_cart_big=rpart(NA_Sales ~ . - Name , data=vg2016_train, control=rpart.control(cp=0.0015, minsplit=30))
vg_2016 = read.csv("vg2_2016.csv")
vg_2016 = vg_2016 %>% filter(NA_Sales < 25)
vg_2016 = na.omit(vg_2016)
#vg_2016$Name = factor(vg_2016$Name)
vg_2016$Platform = factor(vg_2016$Platform)
vg_2016$Year = factor(vg_2016$Year)
vg_2016$Genre = factor(vg_2016$Genre)
vg_2016$Publisher = factor(vg_2016$Publisher)
vg_2016$Developer = factor(vg_2016$Developer)
vg_2016$Rating = factor(vg_2016$Rating)
vg2016_split = initial_split(vg_2016, prop=0.8)
vg2016_train = training(vg2016_split)
vg2016_test = testing(vg2016_split)
tree_cart_big=rpart(NA_Sales ~ . - Name , data=vg2016_train, control=rpart.control(cp=0.0015, minsplit=30))
tree_cart_big=rpart(NA_Sales ~ ., data=vg2016_train, control=rpart.control(cp=0.0015, minsplit=30))
rpart.plot(tree_cart_big, digits=-5, type=4, extra=1)
a= rmse(tree_cart_big, dengue_test)
tree_cart_big=rpart(NA_Sales ~ . - Name, data=vg2016_train, control=rpart.control(cp=0.0015, minsplit=30))
rpart.plot(tree_cart_big, digits=-5, type=4, extra=1)
a= rmse(tree_cart_big, vg2016_test)
vg_2016 = vg_2016 %>% filter(NA_Sales < 25)
vg_2016 = na.omit(vg_2016)
#vg_2016$Name = factor(vg_2016$Name)
vg_2016$Platform = factor(vg_2016$Platform)
vg_2016$Year = factor(vg_2016$Year)
vg_2016$Genre = factor(vg_2016$Genre)
vg_2016$Publisher = factor(vg_2016$Publisher)
vg_2016$Developer = factor(vg_2016$Developer)
vg_2016$Rating = factor(vg_2016$Rating)
vg2016_split = initial_split(vg_2016, prop=0.8)
vg2016_train = training(vg2016_split)
vg2016_test = testing(vg2016_split)
tree_cart_big=rpart(NA_Sales ~ . - Name, data=vg2016_train, control=rpart.control(cp=0.0015, minsplit=30))
vg_2016 = read.csv("vg2_2016.csv")
vg_2016 = vg_2016 %>% filter(NA_Sales < 25)
vg_2016 = na.omit(vg_2016)
#vg_2016$Name = factor(vg_2016$Name)
vg_2016$Platform = factor(vg_2016$Platform)
vg_2016$Year = factor(vg_2016$Year)
vg_2016$Genre = factor(vg_2016$Genre)
vg_2016$Publisher = factor(vg_2016$Publisher)
vg_2016$Developer = factor(vg_2016$Developer)
vg_2016$Rating = factor(vg_2016$Rating)
vg2016_split = initial_split(vg_2016, prop=0.8)
vg2016_train = training(vg2016_split)
vg2016_test = testing(vg2016_split)
tree_cart_big=rpart(NA_Sales ~ . - Name, data=vg2016_train, control=rpart.control(cp=0.0015, minsplit=30))
rpart.plot(tree_cart_big, digits=-5, type=4, extra=1)
tree_cart_big=rpart(NA_Sales ~ . - Name, data=vg2016_train, control=rpart.control(cp=0.015, minsplit=30))
rpart.plot(tree_cart_big, digits=-5, type=4, extra=1)
vg_2016 = read.csv("vg2_2016.csv")
vg_2016 = vg_2016 %>% filter(NA_Sales < 25)
vg_2016 = na.omit(vg_2016)
vg2016_split = initial_split(vg_2016, prop=0.8)
vg2016_train = training(vg2016_split)
vg2016_test = testing(vg2016_split)
tree_cart_big=rpart(NA_Sales ~ . - Name, data=vg2016_train, control=rpart.control(cp=0.015, minsplit=30))
rpart.plot(tree_cart_big, digits=-5, type=4, extra=1)
tree_cart_big=rpart(NA_Sales ~ . - Name, data=vg2016_train, control=rpart.control(cp=0.015, minsplit=3))
rpart.plot(tree_cart_big, digits=-5, type=4, extra=1)
a= rmse(tree_cart_big, vg2016_test)
tree_cart_big=rpart(NA_Sales ~ . - Name, data=vg2016_train, method = "anova")
vg2016_split = initial_split(vg_2016, prop=0.8)
vg2016_train = training(vg2016_split)
vg2016_test = testing(vg2016_split)
str(vg2016_train)
tree_cart_big=rpart(NA_Sales ~ . - Name, data=vg2016_train, method = "anova")
rpart.plot(tree_cart_big, digits=-5, type=4, extra=1)
a= rmse(tree_cart_big, vg2016_test)
lm_model <- lm(NA_Sales ~ . - Name, data = vg2016_train)
lm_model
predictions_lm <- predict(lm_model, newdata = vg2016_test)
lm_model <- lm(NA_Sales ~ . - Name - Developer - Publisher, data = vg2016_train)
predictions_lm <- predict(lm_model, newdata = vg2016_test)
lm_model
ggplot(vg_2016) + geom_point(aes(x=EU_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=EU_Sales, color = Genre))
vg_2016$NA_Sales = log(NA_Sales)
vg_2016$NA_Sales = log(vg_2016$NA_Sales)
vg_2016 = read.csv("vg2_2016.csv")
vg_2016$NA_Sales = log(vg_2016$NA_Sales)
vg_2016$Platform = factor(vg_2016$Platform)
vg_2016$Year = factor(vg_2016$Year)
vg_2016$Genre = factor(vg_2016$Genre)
vg_2016$Publisher = factor(vg_2016$Publisher)
vg_2016$Developer = factor(vg_2016$Developer)
vg_2016$Rating = factor(vg_2016$Rating)
ggplot(vg_2016) + geom_point(aes(x=EU_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=EU_Sales, color = Genre))
vg_2016$NA_Sales = log(vg_2016$NA_Sales)
vg_2016$EU_Sales = log(vg_2016$EU_Sales)
vg_2016$JP_Sales = log(vg_2016$JP_Sales)
vg_2016 = read.csv("vg2_2016.csv")
vg_2016$NA_Sales = log(vg_2016$NA_Sales)
vg_2016$EU_Sales = log(vg_2016$EU_Sales)
vg_2016$JP_Sales = log(vg_2016$JP_Sales)
ggplot(vg_2016) + geom_point(aes(x=EU_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=NA_Sales, color = Genre))
ggplot(vg_2016) + geom_point(aes(x=JP_Sales, y=EU_Sales, color = Genre))
